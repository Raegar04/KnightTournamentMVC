@using KnightTournament.Extensions;
@using KnightTournament.Models.Enums;
@using KnightTournament.ViewModels;
@model DisplayViewModel<Tournament>

@{
    var resultHolderId = User.GetUserIdFromPrincipal();
}

<style>
    .tournament-list {
        display: flex;
        flex-wrap: wrap;
        gap: 20px;
        justify-content: start;
    }

    .tournament-item {
        border: 1px solid #ccc;
        padding: 10px;
        width: 30%;
        box-sizing: border-box;
    }

    .operations a {
        margin-right: 20px;
        display: inline-flex;
    }

    .overlay {
        display: none;
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(0, 0, 0, 0.7);
        justify-content: center;
        align-items: center;
        z-index: 1;
    }

    #form-container {
        background-color: #fff;
        padding: 20px;
        border-radius: 10px;
        text-align: center;
    }

    .searching button, select, input {
        margin-right: 20px;
        padding: 15px;
        margin:10px
    }

    .searching{
    margin-top:30px;
    margin-right:30px;
    background-color:lightslategrey;
    }

    .statistic-container {
        margin-bottom:30px;
    }

    .select-search option{
        text-align:center;
    }

</style>
<a asp-controller="Tournament" asp-action="Create" class="btn btn-outline-primary">Create new</a>
<a asp-controller="Tournament" asp-action="ByTrophies" class="btn btn-outline-primary">Get descending by trophies values</a>

<div class="statistic-container d-flex">

    <form style="margin-right:50px" class="d-flex searching" method="post" asp-action="Search" asp-controller="Tournament" >
        <select class="form-control select-search" asp-for="SelectedSearchOption">
            <option value="">-- Select by --</option>
            @foreach (var entity in Model.SearchItems)
            {
                <option value="@entity">@entity</option>
            }
        </select>
        <input type="text" class="form-control" asp-for="SearchString" placeholder="@Model.SearchString" />
        <button type="submit" class="form-check-label btn btn-outline-dark">Search</button>
    </form>
    
    <form class="d-flex searching" method="post" asp-action="Filter" asp-controller="Tournament">
        <select class="form-control select-search" asp-for="SelectedSearchOption">
            <option value="">-- Filter by --</option>
            @foreach (var entity in Model.FilterItems)
            {
                <option value="@entity">@entity</option>
            }
        </select>
        <input type="text" class="form-control" asp-for="SelectedFrom" placeholder="from" />
        <input type="text" class="form-control" asp-for="SelectedTo" placeholder="to" />

        <button type="submit" class="form-check-label btn btn-outline-dark">Filter</button>
    </form>
</div>
<div class="tournament-list">
    @foreach (var tournament in Model.Entities)
    {
        var knights = tournament.Tournament_Knights;

        <div class="tournament-item">
            <input type="hidden" id="tour-info" placeholder="@tournament.Tournament_Id" />
            <h2>@tournament.Tournament_Name</h2>
            <p>@tournament.Tournament_Description</p>
            <p>Scope: @tournament.Tournament_Scope</p>
            <p>Start Date: @tournament.Tournament_StartDate</p>
            <p>Location: @tournament.Tournament_Location.Location_Country. @tournament.Tournament_Location.Location_City. @tournament.Tournament_Location.Location_Place</p>
            <p>Status: @tournament.Tournament_Status</p>
            <div class="operations">
                @if (tournament.Tournament_Rounds != null && tournament.Tournament_Rounds.Count > 0)
                {
                    <h4>Tournament consists of @tournament.Tournament_Rounds.Count rounds.</h4>
                    <a class="btn btn-outline-primary" asp-action="Display" asp-controller="Round" asp-route-tournamentId="@tournament.Tournament_Id">View</a>
                }
                else
                {
                    <p>No rounds available for this tournament.</p>
                    @if (resultHolderId.IsSuccessful && resultHolderId.Data == tournament.Tournament_HolderId && tournament.Tournament_Status!=Status.Ended)
                    {
                        <p><a href="@Url.Action("Create", "Round", new { tournamentId = tournament.Tournament_Id})" class="btn btn-outline-primary">Create</a></p>
                    }
                }
            </div><br />
            <div class="operations">
                @if (resultHolderId.IsSuccessful && resultHolderId.Data == tournament.Tournament_HolderId)
                {
                    <h2> Options:</h2>
                    <a asp-controller="Tournament" asp-action="Update" asp-route-id="@tournament.Tournament_Id" class="btn btn-primary">Update</a>
                    <a asp-controller="Tournament" asp-action="Delete" asp-route-id="@tournament.Tournament_Id" class="btn btn-danger">Delete</a>
                  
                    @if (tournament.Tournament_Status == Status.Ended)
                    {
                        <span  class="btn btn-light">Finished</span>
                        <a asp-action="LoadPDF" asp-controller="Tournament" asp-route-tournamentId="@tournament.Tournament_Id" class="btn btn-light">Load Results</a>
                    }
                    else
                    {
                        <a asp-controller="Tournament" asp-action="Finish" asp-route-tournamentId="@tournament.Tournament_Id" class="btn btn-light">Finish</a>

                    }

                }
                else if (resultHolderId.IsSuccessful && resultHolderId.Data != tournament.Tournament_HolderId)
                {
                    @if (tournament.Tournament_Knights.Any(knight => knight.Id == resultHolderId.Data))
                    {
                        <span class="text text-primary">Applied</span>
                    }
                    else
                    {
                        <h4> Options:</h4>
                        <a asp-controller="TournamentKnight" asp-action="Apply" asp-route-tournamentId="@tournament.Tournament_Id" class="btn btn-primary">Apply</a>
                    }
                }
            </div><br />

        </div>
    }
</div>